//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AltBet.MailSettingsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MailSettingsServiceReference.IMailSettingsManager")]
    public interface IMailSettingsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpSubscribe", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpSubscribeResponse")]
        void MailChimpSubscribe(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpSubscribe", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpSubscribeResponse")]
        System.Threading.Tasks.Task MailChimpSubscribeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpUnsubscribe", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpUnsubscribeResponse")]
        void MailChimpUnsubscribe(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpUnsubscribe", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpUnsubscribeResponse")]
        System.Threading.Tasks.Task MailChimpUnsubscribeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpSettings", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpSettingsResponse")]
        void MailChimpSettings(string email, AltBet.Model.User settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/MailChimpSettings", ReplyAction="http://tempuri.org/IMailSettingsManager/MailChimpSettingsResponse")]
        System.Threading.Tasks.Task MailChimpSettingsAsync(string email, AltBet.Model.User settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/GetLinkForForm", ReplyAction="http://tempuri.org/IMailSettingsManager/GetLinkForFormResponse")]
        string GetLinkForForm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSettingsManager/GetLinkForForm", ReplyAction="http://tempuri.org/IMailSettingsManager/GetLinkForFormResponse")]
        System.Threading.Tasks.Task<string> GetLinkForFormAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMailSettingsManagerChannel : AltBet.MailSettingsServiceReference.IMailSettingsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSettingsManagerClient : System.ServiceModel.ClientBase<AltBet.MailSettingsServiceReference.IMailSettingsManager>, AltBet.MailSettingsServiceReference.IMailSettingsManager {
        
        public MailSettingsManagerClient() {
        }
        
        public MailSettingsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailSettingsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailSettingsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailSettingsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void MailChimpSubscribe(string email) {
            base.Channel.MailChimpSubscribe(email);
        }
        
        public System.Threading.Tasks.Task MailChimpSubscribeAsync(string email) {
            return base.Channel.MailChimpSubscribeAsync(email);
        }
        
        public void MailChimpUnsubscribe(string email) {
            base.Channel.MailChimpUnsubscribe(email);
        }
        
        public System.Threading.Tasks.Task MailChimpUnsubscribeAsync(string email) {
            return base.Channel.MailChimpUnsubscribeAsync(email);
        }
        
        public void MailChimpSettings(string email, AltBet.Model.User settings) {
            base.Channel.MailChimpSettings(email, settings);
        }
        
        public System.Threading.Tasks.Task MailChimpSettingsAsync(string email, AltBet.Model.User settings) {
            return base.Channel.MailChimpSettingsAsync(email, settings);
        }
        
        public string GetLinkForForm() {
            return base.Channel.GetLinkForForm();
        }
        
        public System.Threading.Tasks.Task<string> GetLinkForFormAsync() {
            return base.Channel.GetLinkForFormAsync();
        }
    }
}
