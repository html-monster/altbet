//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AltBet.FileServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileServiceReference.IFileManager")]
    public interface IFileManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/SaveImage", ReplyAction="http://tempuri.org/IFileManager/SaveImageResponse")]
        AltBet.Exchange.UploadedImageInfo SaveImage(System.Web.HttpPostedFileBase file, string filePath, string fileName, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/SaveImage", ReplyAction="http://tempuri.org/IFileManager/SaveImageResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.UploadedImageInfo> SaveImageAsync(System.Web.HttpPostedFileBase file, string filePath, string fileName, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/DeleteImage", ReplyAction="http://tempuri.org/IFileManager/DeleteImageResponse")]
        int DeleteImage(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/DeleteImage", ReplyAction="http://tempuri.org/IFileManager/DeleteImageResponse")]
        System.Threading.Tasks.Task<int> DeleteImageAsync(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/UsersImages", ReplyAction="http://tempuri.org/IFileManager/UsersImagesResponse")]
        AltBet.Exchange.UploadedImageInfo[] UsersImages(string dirPath, string urlTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileManager/UsersImages", ReplyAction="http://tempuri.org/IFileManager/UsersImagesResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.UploadedImageInfo[]> UsersImagesAsync(string dirPath, string urlTemplate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileManagerChannel : AltBet.FileServiceReference.IFileManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileManagerClient : System.ServiceModel.ClientBase<AltBet.FileServiceReference.IFileManager>, AltBet.FileServiceReference.IFileManager {
        
        public FileManagerClient() {
        }
        
        public FileManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AltBet.Exchange.UploadedImageInfo SaveImage(System.Web.HttpPostedFileBase file, string filePath, string fileName, string domainName) {
            return base.Channel.SaveImage(file, filePath, fileName, domainName);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.UploadedImageInfo> SaveImageAsync(System.Web.HttpPostedFileBase file, string filePath, string fileName, string domainName) {
            return base.Channel.SaveImageAsync(file, filePath, fileName, domainName);
        }
        
        public int DeleteImage(string filePath) {
            return base.Channel.DeleteImage(filePath);
        }
        
        public System.Threading.Tasks.Task<int> DeleteImageAsync(string filePath) {
            return base.Channel.DeleteImageAsync(filePath);
        }
        
        public AltBet.Exchange.UploadedImageInfo[] UsersImages(string dirPath, string urlTemplate) {
            return base.Channel.UsersImages(dirPath, urlTemplate);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.UploadedImageInfo[]> UsersImagesAsync(string dirPath, string urlTemplate) {
            return base.Channel.UsersImagesAsync(dirPath, urlTemplate);
        }
    }
}
