//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AltBet.OrderServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderServiceReference.IOrderManager")]
    public interface IOrderManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Add", ReplyAction="http://tempuri.org/IOrderManager/AddResponse")]
        void Add(AltBet.Model.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Add", ReplyAction="http://tempuri.org/IOrderManager/AddResponse")]
        System.Threading.Tasks.Task AddAsync(AltBet.Model.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Cancel", ReplyAction="http://tempuri.org/IOrderManager/CancelResponse")]
        bool Cancel(AltBet.Model.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Cancel", ReplyAction="http://tempuri.org/IOrderManager/CancelResponse")]
        System.Threading.Tasks.Task<bool> CancelAsync(AltBet.Model.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrders", ReplyAction="http://tempuri.org/IOrderManager/GetOrdersResponse")]
        AltBet.Exchange.GetOrdersResponse GetOrders(AltBet.Exchange.GetOrdersRequest symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrders", ReplyAction="http://tempuri.org/IOrderManager/GetOrdersResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.GetOrdersResponse> GetOrdersAsync(AltBet.Exchange.GetOrdersRequest symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrdersOrPositions", ReplyAction="http://tempuri.org/IOrderManager/GetOrdersOrPositionsResponse")]
        AltBet.Exchange.OrdersPositionsHistory GetOrdersOrPositions(AltBet.Exchange.GetOrdersOrPositionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrdersOrPositions", ReplyAction="http://tempuri.org/IOrderManager/GetOrdersOrPositionsResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.OrdersPositionsHistory> GetOrdersOrPositionsAsync(AltBet.Exchange.GetOrdersOrPositionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetCurrentOrders", ReplyAction="http://tempuri.org/IOrderManager/GetCurrentOrdersResponse")]
        AltBet.Exchange.CurrentOrders[] GetCurrentOrders(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetCurrentOrders", ReplyAction="http://tempuri.org/IOrderManager/GetCurrentOrdersResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.CurrentOrders[]> GetCurrentOrdersAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/CancelAll", ReplyAction="http://tempuri.org/IOrderManager/CancelAllResponse")]
        void CancelAll(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/CancelAll", ReplyAction="http://tempuri.org/IOrderManager/CancelAllResponse")]
        System.Threading.Tasks.Task CancelAllAsync(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/CloseOut", ReplyAction="http://tempuri.org/IOrderManager/CloseOutResponse")]
        void CloseOut(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/CloseOut", ReplyAction="http://tempuri.org/IOrderManager/CloseOutResponse")]
        System.Threading.Tasks.Task CloseOutAsync(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Reverse", ReplyAction="http://tempuri.org/IOrderManager/ReverseResponse")]
        void Reverse(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/Reverse", ReplyAction="http://tempuri.org/IOrderManager/ReverseResponse")]
        System.Threading.Tasks.Task ReverseAsync(string symbol, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrderAndCancel", ReplyAction="http://tempuri.org/IOrderManager/GetOrderAndCancelResponse")]
        void GetOrderAndCancel(AltBet.Model.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/GetOrderAndCancel", ReplyAction="http://tempuri.org/IOrderManager/GetOrderAndCancelResponse")]
        System.Threading.Tasks.Task GetOrderAndCancelAsync(AltBet.Model.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderManagerChannel : AltBet.OrderServiceReference.IOrderManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderManagerClient : System.ServiceModel.ClientBase<AltBet.OrderServiceReference.IOrderManager>, AltBet.OrderServiceReference.IOrderManager {
        
        public OrderManagerClient() {
        }
        
        public OrderManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(AltBet.Model.Order order) {
            base.Channel.Add(order);
        }
        
        public System.Threading.Tasks.Task AddAsync(AltBet.Model.Order order) {
            return base.Channel.AddAsync(order);
        }
        
        public bool Cancel(AltBet.Model.Order order) {
            return base.Channel.Cancel(order);
        }
        
        public System.Threading.Tasks.Task<bool> CancelAsync(AltBet.Model.Order order) {
            return base.Channel.CancelAsync(order);
        }
        
        public AltBet.Exchange.GetOrdersResponse GetOrders(AltBet.Exchange.GetOrdersRequest symbol) {
            return base.Channel.GetOrders(symbol);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.GetOrdersResponse> GetOrdersAsync(AltBet.Exchange.GetOrdersRequest symbol) {
            return base.Channel.GetOrdersAsync(symbol);
        }
        
        public AltBet.Exchange.OrdersPositionsHistory GetOrdersOrPositions(AltBet.Exchange.GetOrdersOrPositionsRequest request) {
            return base.Channel.GetOrdersOrPositions(request);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.OrdersPositionsHistory> GetOrdersOrPositionsAsync(AltBet.Exchange.GetOrdersOrPositionsRequest request) {
            return base.Channel.GetOrdersOrPositionsAsync(request);
        }
        
        public AltBet.Exchange.CurrentOrders[] GetCurrentOrders(string userName) {
            return base.Channel.GetCurrentOrders(userName);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.CurrentOrders[]> GetCurrentOrdersAsync(string userName) {
            return base.Channel.GetCurrentOrdersAsync(userName);
        }
        
        public void CancelAll(string symbol, string name) {
            base.Channel.CancelAll(symbol, name);
        }
        
        public System.Threading.Tasks.Task CancelAllAsync(string symbol, string name) {
            return base.Channel.CancelAllAsync(symbol, name);
        }
        
        public void CloseOut(string symbol, string name) {
            base.Channel.CloseOut(symbol, name);
        }
        
        public System.Threading.Tasks.Task CloseOutAsync(string symbol, string name) {
            return base.Channel.CloseOutAsync(symbol, name);
        }
        
        public void Reverse(string symbol, string name) {
            base.Channel.Reverse(symbol, name);
        }
        
        public System.Threading.Tasks.Task ReverseAsync(string symbol, string name) {
            return base.Channel.ReverseAsync(symbol, name);
        }
        
        public void GetOrderAndCancel(AltBet.Model.Order order) {
            base.Channel.GetOrderAndCancel(order);
        }
        
        public System.Threading.Tasks.Task GetOrderAndCancelAsync(AltBet.Model.Order order) {
            return base.Channel.GetOrderAndCancelAsync(order);
        }
    }
}
