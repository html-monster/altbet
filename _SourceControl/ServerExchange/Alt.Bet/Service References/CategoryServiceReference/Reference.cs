//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AltBet.CategoryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServiceReference.ICategoryManager")]
    public interface ICategoryManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/CreateCategory", ReplyAction="http://tempuri.org/ICategoryManager/CreateCategoryResponse")]
        string CreateCategory(AltBet.Exchange.CategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/CreateCategory", ReplyAction="http://tempuri.org/ICategoryManager/CreateCategoryResponse")]
        System.Threading.Tasks.Task<string> CreateCategoryAsync(AltBet.Exchange.CategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/EditCategory", ReplyAction="http://tempuri.org/ICategoryManager/EditCategoryResponse")]
        string EditCategory(AltBet.Exchange.CategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/EditCategory", ReplyAction="http://tempuri.org/ICategoryManager/EditCategoryResponse")]
        System.Threading.Tasks.Task<string> EditCategoryAsync(AltBet.Exchange.CategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/DeleteCategory", ReplyAction="http://tempuri.org/ICategoryManager/DeleteCategoryResponse")]
        string DeleteCategory(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/DeleteCategory", ReplyAction="http://tempuri.org/ICategoryManager/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<string> DeleteCategoryAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/MoveCategory", ReplyAction="http://tempuri.org/ICategoryManager/MoveCategoryResponse")]
        string MoveCategory(System.Guid id, int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/MoveCategory", ReplyAction="http://tempuri.org/ICategoryManager/MoveCategoryResponse")]
        System.Threading.Tasks.Task<string> MoveCategoryAsync(System.Guid id, int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetAllCategoryItem", ReplyAction="http://tempuri.org/ICategoryManager/GetAllCategoryItemResponse")]
        AltBet.Exchange.CategoryItem[] GetAllCategoryItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetAllCategoryItem", ReplyAction="http://tempuri.org/ICategoryManager/GetAllCategoryItemResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem[]> GetAllCategoryItemAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryByUrl", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByUrlResponse")]
        AltBet.Exchange.CategoryItem GetCategoryByUrl(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryByUrl", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByUrlResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByUrlAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryByUrlChain", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByUrlChainResponse")]
        AltBet.Exchange.CategoryItem GetCategoryByUrlChain(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryByUrlChain", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByUrlChainResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByUrlChainAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryById", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByIdResponse")]
        AltBet.Exchange.CategoryItem GetCategoryById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryManager/GetCategoryById", ReplyAction="http://tempuri.org/ICategoryManager/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByIdAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryManagerChannel : AltBet.CategoryServiceReference.ICategoryManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryManagerClient : System.ServiceModel.ClientBase<AltBet.CategoryServiceReference.ICategoryManager>, AltBet.CategoryServiceReference.ICategoryManager {
        
        public CategoryManagerClient() {
        }
        
        public CategoryManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreateCategory(AltBet.Exchange.CategoryRequest request) {
            return base.Channel.CreateCategory(request);
        }
        
        public System.Threading.Tasks.Task<string> CreateCategoryAsync(AltBet.Exchange.CategoryRequest request) {
            return base.Channel.CreateCategoryAsync(request);
        }
        
        public string EditCategory(AltBet.Exchange.CategoryRequest request) {
            return base.Channel.EditCategory(request);
        }
        
        public System.Threading.Tasks.Task<string> EditCategoryAsync(AltBet.Exchange.CategoryRequest request) {
            return base.Channel.EditCategoryAsync(request);
        }
        
        public string DeleteCategory(System.Guid id) {
            return base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCategoryAsync(System.Guid id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public string MoveCategory(System.Guid id, int position) {
            return base.Channel.MoveCategory(id, position);
        }
        
        public System.Threading.Tasks.Task<string> MoveCategoryAsync(System.Guid id, int position) {
            return base.Channel.MoveCategoryAsync(id, position);
        }
        
        public AltBet.Exchange.CategoryItem[] GetAllCategoryItem() {
            return base.Channel.GetAllCategoryItem();
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem[]> GetAllCategoryItemAsync() {
            return base.Channel.GetAllCategoryItemAsync();
        }
        
        public AltBet.Exchange.CategoryItem GetCategoryByUrl(string category) {
            return base.Channel.GetCategoryByUrl(category);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByUrlAsync(string category) {
            return base.Channel.GetCategoryByUrlAsync(category);
        }
        
        public AltBet.Exchange.CategoryItem GetCategoryByUrlChain(string path) {
            return base.Channel.GetCategoryByUrlChain(path);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByUrlChainAsync(string path) {
            return base.Channel.GetCategoryByUrlChainAsync(path);
        }
        
        public AltBet.Exchange.CategoryItem GetCategoryById(System.Guid id) {
            return base.Channel.GetCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.CategoryItem> GetCategoryByIdAsync(System.Guid id) {
            return base.Channel.GetCategoryByIdAsync(id);
        }
    }
}
