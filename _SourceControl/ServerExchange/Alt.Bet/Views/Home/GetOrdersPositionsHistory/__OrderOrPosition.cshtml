@*@model AltBet.Exchange.OrderOrPosition*@

<tr class="@(Model.isMirror == 0 ? (Model.Side == AltBet.Exchange.Side.Buy ? "buy" : "sell") : (Model.Side == AltBet.Exchange.Side.Buy ? "sell" : "buy"))" id="@Model.ID">
    <td class="title">@(Model.isMirror == 0 ?
                                Model.Symbol.HomeName :
                                Model.Symbol.AwayName)</td>
    <td><span class="date">@Model.Time.ToShortDateString()</span> | <span class="time">@Model.Time.ToString("HH:mm")</span></td>
    <td>@(Model.isMirror == 0 ?
            (Model.Side == AltBet.Exchange.Side.Buy ? "Buy" : "Sell") :
            (Model.Side == AltBet.Exchange.Side.Buy ? "Sell" : "Buy"))</td>
    <td class="quantity">@Model.Volume</td>
    <td>$@(Model.isMirror == 0 ?
            Math.Round(Model.Price, 2) :
            Math.Round(1 - Model.Price, 2))</td>
    <td><span class="@(Model.isMirror == 0 ?
        (Model.Symbol.LastSide == AltBet.Exchange.Side.Buy ? "buy" : "sell") :
        (Model.Symbol.LastSide == AltBet.Exchange.Side.Buy ? "sell" : "buy")) last_price">$@(Model.isMirror == 0 ?
                                                                                                Math.Round(Model.Symbol.LastPrice, 2) :
                                                                                                Math.Round(1 - Model.Symbol.LastPrice, 2))</span></td>
    <td @(Model.isPosition == 1 ? "class=pos": "")></td>
    <td>
        <button class="edit btn wave">Edit</button>
    </td>
    <td>
            <button class="delete btn wave">Cancel</button> 
    </td>
</tr>