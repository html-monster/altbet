@model AltBet.Bet.Models.EditOrderViewModel
@{
    var options = new AjaxOptions
    {
        Url = Url.Action("Edit", "Order"),
        OnBegin = "ajaxControllerClass.OnBeginJs",
        OnSuccess = "ajaxControllerClass.OnSuccessJs",
        OnFailure = "ajaxControllerClass.OnFailureJs",
        //OnComplete = "OnCompleteJs",
    };
}
<div class="form-container @string.Format("{0}-container ", Model.Side.ToLower())">
    @using (Ajax.BeginForm("Edit", new { }, options, new { @class = Model.Side.ToLower(), autocomplete = "off" }))
    {
        <div class="container">
            <div class="price ">
                <label>Your price</label>
                <div class="input">
                    @Html.TextBoxFor(model => model.LimitPrice, new { @class = "number", data_validation = "0.33", maxlength = "4", autocomplete = "off" })
                    @*<input type="text" class="number" data-validation="0.33" maxlength="4" value="0." autocomplete="off">*@
                    <div class="warning" style="display: none;"><p>Available value from 0.01 to 0.99</p></div>
                    <div class="regulator"><span class="plus" title="Press Arrow Up"></span><span class="minus" title="Press Arrow Down"></span></div>
                </div>
            </div>
            <div class="volume ">
                <label>Quantity</label>
                <div class="input">
                    @Html.TextBoxFor(model => model.Quantity, new { @class = "number", data_validation = "123", maxlength = "7", autocomplete = "off" })
                    @*<input type="text" class="number" data-validation="123" maxlength="7" autocomplete="off">*@
                    <div class="warning" style="display: none;"><p>Available integer value more than 0</p></div>
                    <div class="regulator"><span class="plus" title="Press Arrow Up"></span><span class="minus" title="Press Arrow Down"></span></div>
                </div>
            </div>
            <div class="order_type ">
                <div class="obligations">
                    <label>Sum</label>
                    <div class="input">
                        <input type="text" class="number" data-validation="40.59" maxlength="10" autocomplete="off">
                        <div class="warning" style="display: none;"><p>Minimal available value 0.01</p></div>
                        <div class="regulator"><span class="plus" title="Press Arrow Up"></span><span class="minus" title="Press Arrow Down"></span></div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Symbol)
        @Html.HiddenFor(model => model.isMirror)
        @Html.HiddenFor(model => model.Side)
        <div class="container">
            <label class="checkbox">
                @Html.CheckBoxFor(model => model.OrderType, new { type = "checkbox", @checked = "true" })<span>Limit</span>
        </label>
        <input type="submit" class="btn @Model.Side.ToLower()" value="@Model.Side" style="text-transform: uppercase;">
    </div>
    }
</div>