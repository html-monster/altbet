@model AltBet.Bet.Models.OrderViewModel
@{
    var options = new AjaxOptions
    {
        Url = Url.Action("Create", "Order"),
        OnBegin = "ajaxControllerClass.OnBeginJs",
        OnSuccess = "ajaxControllerClass.OnSuccessJs",
        OnFailure = "ajaxControllerClass.OnFailureJs",
        //OnComplete = "OnCompleteJs",
    };
}
<div class="order_content default" style="position: absolute; left: 0;z-index: 10;  opacity: 0; margin-top: 5px;">
    <div class="sell-container">
        @using (Ajax.BeginForm("Index", "Home", options, new { autocomplete = "off" }))
        {
            <div class="container">
                <div class="price ">
                    <label>Price</label>
                    <div class="input">
                        @Html.TextBoxFor(model => model.LimitPrice, new { type = "text", @class = "number", data_validation = "0.33", maxlength = "4", autocomplete = "off", disabled = "disabled" })
                        <div class="warning" style="display: none;"><p>Available value from 0.01 to 0.99</p></div>
                    </div>
                </div>
                <div class="volume ">
                    <label>Quantity</label>
                    <div class="input">
                        @Html.TextBoxFor(model => model.Quantity, new { type = "text", @class = "number quantity", data_validation = "123", maxlength = "8", autocomplete = "off" })
                        <div class="warning" style="display: none;"><p>Available integer value more than 0</p></div>
                        <div class="regulator">
                            <span class="plus" title="Press Arrow Up"></span>
                            <span class="minus" title="Press Arrow Down"></span>
                        </div>
                    </div>
                </div>
                <div class="obligations ">
                    <label>Sum</label>
                    <div class="input">
                        <input type="text" class="number" data-validation="40.59" maxlength="8" disabled>
                        <div class="warning" style="display: none;"><p>Minimal available value 0.01</p></div>
                    </div>
                </div>
            </div>
                @Html.HiddenFor(model => model.Side, new { @class = "side" })
                @Html.HiddenFor(model => model.Symbol, new { @class = "symbol" })
                @Html.HiddenFor(model => model.isMirror, new { @class = "mirror" })
                @Html.HiddenFor(model => model.OrderType, new { @class = "direction" })
                @Html.HiddenFor(model => model.LimitPrice, new { @class = "price_value" })
            
            <div class="container">
                <input type="submit" class="btn sell" value="Sell" style="text-transform: uppercase; ">
                <span class="delete "></span>
                <div class="checkbox"></div>
            </div>
        }
    </div>
    <div class="buy-container"></div>
</div>