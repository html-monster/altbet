@using System.Collections
@using System.Drawing
@using System.Web.Razor.Parser
@using AltBet.Bet.Resources

@model AltBet.Bet.Models.CommonModel
<html>
<head>
    <meta charset="utf-8">
    @Scripts.Render("~/bundles/all")
    @Scripts.Render("~/bundles/highchart")
    @Styles.Render("~/content/css")
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script type="text/javascript">

    var noSupportMessage = "Your browser cannot support WebSocket!";
    var ws;
    connectSocketServer();
    function appendMessage(message) {
        //$('.executed').html(message + Math.random(0, 100))
        //$('.executed').append(message);
    }

    function connectSocketServer() {
        var support = "MozWebSocket" in window ? 'MozWebSocket' : ("WebSocket" in window ? 'WebSocket' : null);

        if (support == null) {
            appendMessage("* " + noSupportMessage + "<br/>");
            return;
        }

        appendMessage("* Connecting to server ..<br/>");
        // create a new websocket and connect
        ws = new window[support]('ws://localhost:2001/');
        //ws = new window[support]('ws://54.194.92.61:2011/');
        

        // when data is comming from the server, this metod is called
        ws.onmessage = function (evt) {
            console.log('test websocket');
            var parsed = JSON.parse(evt.data);
            if (parsed['MessageType'] == 'Account')
            {
                var balance = (+parsed['Balance']).toFixed(2);
                $('#balance').text(balance);
            }
            else if (parsed['MessageType'] == 'WebSoketOrdersResponse') {                
                var currentOrders;
                var newTicks;
                var symbol;
                var isMirror = false;
                var indexSocket = '';


                if (window.location['search'].indexOf('&') != -1) {
                    symbol = window.location['search'].substring(4, window.location['search'].indexOf('&'));
                    if (window.location['search'].split('&')[1].split('=')[0] == 'reflection') {
                        isMirror = true;
                    }
                }
                else {
                    symbol = window.location['search'].substring(4);
                }

                if (parsed['ActiveOrders'].length > 0) {
                    for (var i = 0; i < parsed['ActiveOrders'].length; i++) {
                        var isThisPageOrders = parsed['ActiveOrders'][i]['Symbol']['Exchange'] + '_' + parsed['ActiveOrders'][i]['Symbol']['Name'] + '_' + parsed['ActiveOrders'][i]['Symbol']['Currency'] == symbol;

                        if (isThisPageOrders) {
                            currentOrders = parsed['ActiveOrders'][i]['Orders'];
                        }
                    }
                    console.log(currentOrders);
                }

                if (typeof currentOrders == 'undefined') {
                    fillEmptyBuy();
                    fillEmptySell();
                }
                else {
                    for (order in currentOrders) {
                        if (currentOrders.length == 1) {
                            if (currentOrders[order].Side == 1) {
                                fillSell(currentOrders[order]);
                                fillEmptyBuy();
                            }
                            else if (currentOrders[order].Side == 0) {
                                fillBuy(currentOrders[order]);
                                fillEmptySell();
                            }
                        }
                        else {
                            if (currentOrders[order].Side == 1) {
                                fillSell(currentOrders[order]);
                            }
                            else if (currentOrders[order].Side == 0) {
                                fillBuy(currentOrders[order]);
                            }
                        }
                    }
                }

                function fillSell(arg) {
                    var sell = "<table><tbody>";
                    var orders = arg.SummaryPositionPrice;
                    for (var sps in orders) {
                        sell += "<tr><td><span>" + Math.round((isMirror ? 1 - orders[sps].Price : orders[sps].Price) * 100) + "¢" + "</span</td><td><span>" + orders[sps].Quantity + "</span></td></tr>";
                    }
                    sell += "</tbody></table>";
                    isMirror ? $('.body.buy').html(sell) : $('.body.sell').html(sell);
                }
                function fillBuy(arg) {
                    var buy = "<table><tbody>";
                    var orders = arg.SummaryPositionPrice.reverse();
                    for (var sps in orders) {
                        buy += "<tr><td><span>" + Math.round((isMirror ? 1 - orders[sps].Price : orders[sps].Price) * 100) + "¢" + "</span</td><td><span>" + orders[sps].Quantity + "</span></td></tr>";
                    }
                    buy += "</tbody></table>";
                    isMirror ? $('.body.sell').html(buy) : $('.body.buy').html(buy);
                }
                function fillEmptySell() {
                    isMirror ? $('.body.buy').html("<table><tbody></tbody></table>") : $('.body.sell').html("<table><tbody></tbody></table>");
                }
                function fillEmptyBuy() {
                    isMirror ? $('.body.sell').html("<table><tbody></tbody></table>") : $('.body.buy').html("<table><tbody></tbody></table>");
                }

                if (parsed['Ticks'].length > 0) {
                    for (var j = 0; j < parsed['Ticks'].length; j++) {
                        var isThisPage = parsed['Ticks'][j]['Symbol']['Exchange'] + '_' + parsed['Ticks'][j]['Symbol']['Name'] + '_' + parsed['Ticks'][j]['Symbol']['Currency'] == symbol;
                        if (isThisPage) {
                            newTicks = parsed['Ticks'][j]['Ticks'];
                        }
                    }
                    console.log(newTicks);
                }

                if (typeof newTicks !== 'undefined') {
                    var ticks = '';
                    for (tick in newTicks) {
                        var date = new Date(eval(newTicks[tick].Time.split('(')[1].split(')')[0]));
                        var dd = date.getUTCDate();
                        var mm = date.getUTCMonth() + 1; //January is 0!
                        var hours = date.getUTCHours();
                        var minutes = date.getUTCMinutes();
                        var seconds = date.getUTCSeconds();
                        if (dd < 10) {
                            dd = '0' + dd
                        }
                        if (mm < 10) {
                            mm = '0' + mm
                        }
                        if (hours < 10) {
                            hours = '0' + hours
                        }
                        if (minutes < 10) {
                            minutes = '0' + minutes
                        }
                        if (seconds < 10) {
                            seconds = '0' + seconds
                        }
                        var fullDate = mm + '-' + dd + '-' + date.getUTCFullYear() + ' ' + hours + ':' + minutes + ':' + seconds;
                        ticks += "<tr><td><span>" + fullDate + "</span></td><td><span>" + Math.round((isMirror ? 1 - newTicks[tick].Price : newTicks[tick].Price) * 100) + "¢" + "</span></td><td><span>" + newTicks[tick].Volume + "</span></td></tr>";
                    }
                    $('.body.tick table tbody').prepend(ticks);
                }
                applyChartData(symbol, parsed)
            }
        };

        // when the connection is established, this method is called
        ws.onopen = function () {

        };

        // when the connection is closed, this method is called
        ws.onclose = function () {

        }
    }

    function sendMessage() {
        if (ws) {
            var messageBox = '{"MessageID":"e50e9ee3-0315-4f01-9316-335b19bd5d59","MessageType":"SubscribeRequest","Currency":"USD","Subscribe":true,"Symbol":{"Currency":"USD","Exchange":"FIRST","Name":"UAH\/USD"},"UserName":"testing@test.ua"}'; //document.getElementById('messageInput');
            ws.send(messageBox.value);
            messageBox.value = "";
        }
    }

    function disconnectWebSocket() {
        if (ws) {
            ws.close();
        }
    }

    function connectWebSocket() {
        connectSocketServer();
    }

    function Getlanguage(val) {
        var value = val.val(),
            action = $("#langForm").attr('action');
        return location.href = action + '?value=' + value;
    }

    window.onload = function () {
        $('#messageInput').attr("disabled", "disabled");
        $('#sendButton').attr("disabled", "disabled");
        $('#disconnectButton').attr("disabled", "disabled");
    }

    </script>
</head>
<body>
    <div class="wrapper">
        <header>
            <div class="logo-container">
                <a href="/" class="logo"></a>
            </div>
            <div class="header_info">
                <div class="header_right">
                    <button class="my_order btn"><a href="my_position.html">My orders</a></button>
                    @*<span class="win-lost">Выиграно/Потеряно: <strong class="win">+100&#36</strong></span>*@
                    @*<span>Вложено: <strong>100&#36</strong></span>*@
                    
                    @*<button class="btn deposit">Депозит</button>*@
                    <!--<img src="../Images/clock.png" alt="i">-->
                    <form class="header_form">
                        <select class="time" name="odds" id="change_time">
                            <option value="-1">11 Apr 16.16, GTM +3</option>
                            <option value="0">11 Apr 01.16, GTM 53</option>
                            <option value="1"> 11 Apr 24.16, GTM +8</option>
                            <option value="2"> 12 Apr 16.16, GTM +4</option>
                            <option value="3"> 12 Apr 17.16, GTM +4</option>
                            <option value="4"> 12 Apr 13.16, GTM +12</option>
                        </select>
                        <select class="odds" name="odds" id="change_odds">
                            <option value=" -1">GA Odds</option>
                            <option value="0">UK Odds</option>
                            <option value="1">US Odds</option>
                            <option value="2">MA Odds</option>
                            <option value="3">IN Odds</option>
                            <option value="4">X3 Odds</option>
                        </select>

                        @*<select class="language" name="odds" id="change_language" onchange="language(this.value)">
                            <option value="en">English</option>
                            <option value="ru">Русский</option>
                            <option value="1">Dansk</option>
                            <option value="2">Deutsch</option>
                            <option value="3">Italiano</option>
                            <option value="4">Romana</option>
                        </select>*@
                    </form>

                        @using (Html.BeginForm("ChangeCulture", "_base", FormMethod.Post, new { @id = "langForm", @class = "header_form" }))
                                {
                                    @Html.DropDownList("ddlCulture", new SelectList(new[]
                                          {
                                              new{value="en",text=Resource.English},
                                              new{value="ru",text=Resource.Russian},
                                              new{value="da",text=Resource.Danish},
                                              new{value="de",text=Resource.German}
                                          }, "value", "text"), Resource.Language, new { onchange = "Getlanguage($(this))" })
                                }

                    <a href="about_how_It_work.html" class="howItWorks">How It Works</a>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span>Доступно: <strong id="balance">@string.Format("{0:#.##}",ViewBag.Model.Header.Balance)</strong>&#36</span>
                    }
                </div>
            </div>
            <div class="user">
                <div class="log_in" style="display: none;">
                    <span class="user-name">Иван</span>
                    <img class="clock" src="../Images/user.png" alt="i">
                    <ul class="user-menu">
                        <li><a href="user_page.html">Account</a></li>
                        <li><a href="user_page.html">Funds</a></li>
                        <li><a href="#">Log out</a></li>
                    </ul>
                </div>
                @{ if (!User.Identity.IsAuthenticated)
                    {
                        <div class="log_out">
                            <a href="#pop-up"><span class="sign_in">Sign in</span></a>
                            <a href=@Url.Action("Index", "Account")><span class="sign_up">Sign Up</span></a>
                        </div>
                    }
                   else
                   {
                        @*<div class="log_out">
                            <span>@User.Identity.Name <a href=@Url.Action("Logout", "Account")><span>logout</span></a></span>
                        </div>*@
                        <div class="log_in">
                            <span class="user-name">@User.Identity.Name</span>
                            @*<img class="clock" src="../Images/user.png" alt="i">*@
                            <ul class="user-menu">
                                <li><a href="#">Account</a></li>
                                <li><a href="#">Funds</a></li>
                                <li><a href=@Url.Action("Logout", "Account")>Log out</a></li>
                            </ul>
                        </div>
                   }
}  
            </div>
        </header>
        
        <nav class="main_menu">
            <div class="nav_search">
                <form action="" method="post" class="search">
                    <input type="search" name="search" placeholder="Search" class="input" />
                    <input type="submit" value="" class="submit" />
                </form>
            </div>
            <ul class="nav_bet">
                <li class="society main">
                    <span>Society</span>
                    <a href="society_index.html" class="jump" title="View eventes at this level."></a>
                    <ul class="sub-menu_1">
                        <li>
                            <span>USA</span><a href="#" class="jump"></a>
                            <ul class="sub-menu_2">
                                <li>
                                    <a href="#" class="favorite" title="add to favorite"></a><span>PoliticalEvents</span><a href="#" class="jump"></a>
                                    <ul class="sub-menu_3">
                                        <li><a href="#" class="favorite_small"></a><a href="event_page.html">President elections: Clinton/Trump</a></li>
                                        @*<li><a href="#" class="favorite_small"></a><a href="event_page.html">Event</a></li>*@
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="favorite" title="add to favorite"></a><span>SocialEvents</span><a href="#" class="jump"></a>
                                    <ul class="sub-menu_3">
                                        <li><a href="#" class="favorite_small"></a><a href="event_page.html">Grammy Award</a></li>
                                        @*<li><a href="#" class="favorite_small"></a><a href="event_page.html">Event</a></li>*@
                                    </ul>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <span>Ukraine</span><a href="#" class="jump"></a>
                            <ul class="sub_menu_2">
                                <li>
                                    <a href="#" class="favorite" title="add to favorite"></a><span>PoliticalEvents</span><a href="#" class="jump"></a>
                                    <ul class="sub-menu_3">
                                        <li><a href="#" class="favorite_small"></a><a href="event_page.html">PM elections: Groismann?</a></li>
                                        @*<li><a href="#" class="favorite_small"></a><a href="event_page.html">Event</a></li>*@
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="favorite" title="add to favorite"></a><span>SocialEvents</span><a href="#" class="jump"></a>
                                    <ul class="sub-menu_3">
                                        <li><a href="#" class="favorite_small"></a><a href="event_page.html">M1 award</a></li>
                                        @*<li><a href="#" class="favorite_small"></a><a href="event_page.html">Event</a></li>*@
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>

        <div class="order order_slide">
            <div class="left_order">
                <div class="wrapper">
                    <div class="tabs">
                        <span class="tab">Новые ордера</span>
                        <span class="tab">Текущие ордера</span>
                    </div>
                    <div class="tab_content order-content">
                        <div class="tab_item" id="order">

                            
                            
                            
                            <div class="order_content" id="order-form" style="display: none;">
                                @using (@Html.BeginForm("Create", "Order", FormMethod.Post))
                                {
                                    <h3 id="exchange_name"></h3>
                                    <div class="sell-container" id="order-container">

                                        <div class="price col-3" style="margin-left: 3px;">
                                            <label>Ваша цена</label><br>
                                            <div class="input">
                                                @Html.TextBoxFor(model => model.NewOrder.LimitPrice, new { type = "text", @class = "number", placeholder = "0,33" })
                                                <div class="regulator"><span class="plus">+</span><span class="minus">-</span></div>
                                            </div>
                                        </div>
                                        <div class="volume col-3" style="margin-left: 3px;">
                                            <label>Объем</label><br>
                                            <div class="input">
                                                @Html.TextBoxFor(model => model.NewOrder.Quantity, new { type = "text", @class = "number", placeholder = "10" })
                                                <div class="regulator"><span class="plus">+</span><span class="minus">-</span></div>
                                            </div>
                                        </div>
                                        <div class="order_type col-3" style="margin-left: 3px;">
                                            <div class="obligations">
                                                <label>Сумма:</label><br>
                                                <div class="input">
                                                    <input type="text" class="number" placeholder="40.59" id="summ" disabled>
                                                    @*<div class="regulator"><span class="plus">+</span><span class="minus">-</span></div>*@
                                                </div>
                                            </div>
                                        </div>
                                        @Html.ListBoxFor(model => model.NewOrder.OrderType, new List<SelectListItem> {
                                                new SelectListItem {Selected = true, Text = "Limit", Value = "Limit" }},
                                                new { @class = "limit_market col-3", style = "margin-left: 3px;", name = "kimit" })

                                        @Html.HiddenFor(model => model.NewOrder.Side, new { id = "side" })
                                        @Html.HiddenFor(model => model.NewOrder.Symbol, new { id = "symbol" })
                                        @Html.HiddenFor(model => model.NewOrder.isMirror, new { id = "mirror" })
                                        
                                        <input type="submit" id="submit" class="btn sell col-3" value="SELL" style="text-transform: uppercase;">
                                        <button class="btn delete col-3" style="margin-left: 3px;"></button>

                                    </div>
                                    <div class="buy-container"></div>
                                }


                            </div>
                            



                        </div>
                        <div class="tab_item">
                            <div class="order_content buy">
                                <div class="my_order">
                                    <h3>USD/UAH 25-31.06.16</h3><strong class="last-price up">0.34</strong>
                                    <form>
                                        <div class="profit col-3">
                                            <label>Ваша цена: </label><br>
                                            <div class="input">
                                                <input type="number" placeholder="0.33" pattern="[-+]?[0-9]*[.,]?[0-9]+">
                                                <div class="regulator">
                                                    <span class="plus">+</span>
                                                    <span class="minus">-</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="responsibility col-3">
                                            <label>Ваш объем:</label><br>
                                            <div class="input">
                                                <input type="number" placeholder="123" pattern="[-+]?[0-9]*[.,]?[0-9]+">
                                                <div class="regulator">
                                                    <span class="plus">+</span>
                                                    <span class="minus">-</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-3">
                                            <button class="btn change_order"></button>
                                            <button class="btn cancel"></button>
                                        </div>
                                        <span class="obligation">Сумма: <span class="value">40,59</span></span>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @RenderBody()
    </div>
    <footer class="footer">
        <ul>
            <li class="first"><a href="about_page.html">About</a></li>
            <li class="first"><a href="about_how_It_work.html">How It Works</a></li>
            <li class="first"><a href="#">Help</a></li>
            <li class="first"><a href="#">Trading Rules</a></li>
            <li><a href="#">Terms and Conditions</a></li>
            <li><a href="#">Privacy & Cookie Policy</a></li>
            <li><a href="#">Responsible Gaming</a></li>
            <li><a href="#">Payment Methods</a></li>
            <li><a href="#">Contact Us</a></li>
            <li><a href="#">Affiliates</a></li>
            <li><a href="#">Security</a></li>
        </ul>
        <p>
            Owned and operated by Smarkets (Malta) Limited (Reg No: C 44795) of Level 7, Ir-Rampa ta' San Giljan Street, St.
            Julians STJ 1062 Malta. Regulated in the UK by the Gambling Commission. Licensed and regulated outside of the UK by
            Malta Gaming Authority (MGA/CL3/492/2008 issued May 12th, 2009). Please gamble responsibly.
        </p>
    </footer>
    <div class="sign_in_form">
        <div class="sign_in_content">
            @using (@Html.BeginForm("Login", "Account", FormMethod.Post))
            {
                <div class="head_form">
                    <span class="close"></span>
                </div>
                <div class="content_form">
                    <div class="container_login">
                    
                        <h3>Sign In using:</h3>
                        <button class="facebook">Facebook</button>
                        <button class="twitter">Twitter</button>
                        <h3>Or</h3>
                        <label for="email">Email Address</label><br>
                        @Html.TextBoxFor(model => model.LoginUser.Email, new { placeholder = "example@mail.ru", type = "email", id = "mail" })
                        <label for="password">Password</label><br>
                        @Html.TextBoxFor(model => model.LoginUser.Password, new { placeholder = "Password", type = "password", id = "password" })
                        <div class="remember_forgot">
                            <label>
                                <input type="checkbox" id="remember_checkbox">
                                <span>Remember Me</span>
                            </label>
                            <a href="#" class="fogot_password">Forgot your password?</a>
                        </div>
                        <input type="submit" value="Submit" id="submit_sign">
                        <input type="submit" value="Sign Up Insteaded" id="submit_sign_insteaded">
                    </div>
                </div>
            }
        </div>
    </div>
</body>
</html>