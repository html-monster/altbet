//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36301
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AltBet.Admin.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AltBet.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BettorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComparePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailNewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailUpdatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bettor {
            get {
                return this.BettorField;
            }
            set {
                if ((object.ReferenceEquals(this.BettorField, value) != true)) {
                    this.BettorField = value;
                    this.RaisePropertyChanged("Bettor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComparePassword {
            get {
                return this.ComparePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ComparePasswordField, value) != true)) {
                    this.ComparePasswordField = value;
                    this.RaisePropertyChanged("ComparePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailActivity {
            get {
                return this.MailActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.MailActivityField, value) != true)) {
                    this.MailActivityField = value;
                    this.RaisePropertyChanged("MailActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailFrequency {
            get {
                return this.MailFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.MailFrequencyField, value) != true)) {
                    this.MailFrequencyField = value;
                    this.RaisePropertyChanged("MailFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailNews {
            get {
                return this.MailNewsField;
            }
            set {
                if ((object.ReferenceEquals(this.MailNewsField, value) != true)) {
                    this.MailNewsField = value;
                    this.RaisePropertyChanged("MailNews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailUpdates {
            get {
                return this.MailUpdatesField;
            }
            set {
                if ((object.ReferenceEquals(this.MailUpdatesField, value) != true)) {
                    this.MailUpdatesField = value;
                    this.RaisePropertyChanged("MailUpdates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Trade {
            get {
                return this.TradeField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeField, value) != true)) {
                    this.TradeField = value;
                    this.RaisePropertyChanged("Trade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Register", ReplyAction="http://tempuri.org/IUserManager/RegisterResponse")]
        void Register(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Register", ReplyAction="http://tempuri.org/IUserManager/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Login", ReplyAction="http://tempuri.org/IUserManager/LoginResponse")]
        AltBet.ExchangeServices.Services.Authorization Login(string userName, string password, string currentPage, string browser, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Login", ReplyAction="http://tempuri.org/IUserManager/LoginResponse")]
        System.Threading.Tasks.Task<AltBet.ExchangeServices.Services.Authorization> LoginAsync(string userName, string password, string currentPage, string browser, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Logout", ReplyAction="http://tempuri.org/IUserManager/LogoutResponse")]
        void Logout(string user, string browser, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Logout", ReplyAction="http://tempuri.org/IUserManager/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string user, string browser, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserInfo", ReplyAction="http://tempuri.org/IUserManager/GetUserInfoResponse")]
        AltBet.Exchange.User GetUserInfo(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserInfo", ReplyAction="http://tempuri.org/IUserManager/GetUserInfoResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.User> GetUserInfoAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditUserInfo", ReplyAction="http://tempuri.org/IUserManager/EditUserInfoResponse")]
        string EditUserInfo(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditUserInfo", ReplyAction="http://tempuri.org/IUserManager/EditUserInfoResponse")]
        System.Threading.Tasks.Task<string> EditUserInfoAsync(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditPreferences", ReplyAction="http://tempuri.org/IUserManager/EditPreferencesResponse")]
        string EditPreferences(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditPreferences", ReplyAction="http://tempuri.org/IUserManager/EditPreferencesResponse")]
        System.Threading.Tasks.Task<string> EditPreferencesAsync(AltBet.Admin.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditUserTheme", ReplyAction="http://tempuri.org/IUserManager/EditUserThemeResponse")]
        string EditUserTheme(string userName, string theme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EditUserTheme", ReplyAction="http://tempuri.org/IUserManager/EditUserThemeResponse")]
        System.Threading.Tasks.Task<string> EditUserThemeAsync(string userName, string theme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ChangePassword", ReplyAction="http://tempuri.org/IUserManager/ChangePasswordResponse")]
        AltBet.Exchange.ResultObj ChangePassword(string userName, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ChangePassword", ReplyAction="http://tempuri.org/IUserManager/ChangePasswordResponse")]
        System.Threading.Tasks.Task<AltBet.Exchange.ResultObj> ChangePasswordAsync(string userName, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/LoginAdmin", ReplyAction="http://tempuri.org/IUserManager/LoginAdminResponse")]
        AltBet.ExchangeServices.Services.Authorization LoginAdmin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/LoginAdmin", ReplyAction="http://tempuri.org/IUserManager/LoginAdminResponse")]
        System.Threading.Tasks.Task<AltBet.ExchangeServices.Services.Authorization> LoginAdminAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/LogoutAdmin", ReplyAction="http://tempuri.org/IUserManager/LogoutAdminResponse")]
        void LogoutAdmin(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/LogoutAdmin", ReplyAction="http://tempuri.org/IUserManager/LogoutAdminResponse")]
        System.Threading.Tasks.Task LogoutAdminAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetLocation", ReplyAction="http://tempuri.org/IUserManager/GetLocationResponse")]
        string GetLocation(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetLocation", ReplyAction="http://tempuri.org/IUserManager/GetLocationResponse")]
        System.Threading.Tasks.Task<string> GetLocationAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UnsubscribeMail", ReplyAction="http://tempuri.org/IUserManager/UnsubscribeMailResponse")]
        void UnsubscribeMail(string name, string type, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UnsubscribeMail", ReplyAction="http://tempuri.org/IUserManager/UnsubscribeMailResponse")]
        System.Threading.Tasks.Task UnsubscribeMailAsync(string name, string type, string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : AltBet.Admin.UserServiceReference.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<AltBet.Admin.UserServiceReference.IUserManager>, AltBet.Admin.UserServiceReference.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Register(AltBet.Admin.UserServiceReference.User user) {
            base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(AltBet.Admin.UserServiceReference.User user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public AltBet.ExchangeServices.Services.Authorization Login(string userName, string password, string currentPage, string browser, string ip) {
            return base.Channel.Login(userName, password, currentPage, browser, ip);
        }
        
        public System.Threading.Tasks.Task<AltBet.ExchangeServices.Services.Authorization> LoginAsync(string userName, string password, string currentPage, string browser, string ip) {
            return base.Channel.LoginAsync(userName, password, currentPage, browser, ip);
        }
        
        public void Logout(string user, string browser, string ip) {
            base.Channel.Logout(user, browser, ip);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string user, string browser, string ip) {
            return base.Channel.LogoutAsync(user, browser, ip);
        }
        
        public AltBet.Exchange.User GetUserInfo(string userName) {
            return base.Channel.GetUserInfo(userName);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.User> GetUserInfoAsync(string userName) {
            return base.Channel.GetUserInfoAsync(userName);
        }
        
        public string EditUserInfo(AltBet.Admin.UserServiceReference.User user) {
            return base.Channel.EditUserInfo(user);
        }
        
        public System.Threading.Tasks.Task<string> EditUserInfoAsync(AltBet.Admin.UserServiceReference.User user) {
            return base.Channel.EditUserInfoAsync(user);
        }
        
        public string EditPreferences(AltBet.Admin.UserServiceReference.User user) {
            return base.Channel.EditPreferences(user);
        }
        
        public System.Threading.Tasks.Task<string> EditPreferencesAsync(AltBet.Admin.UserServiceReference.User user) {
            return base.Channel.EditPreferencesAsync(user);
        }
        
        public string EditUserTheme(string userName, string theme) {
            return base.Channel.EditUserTheme(userName, theme);
        }
        
        public System.Threading.Tasks.Task<string> EditUserThemeAsync(string userName, string theme) {
            return base.Channel.EditUserThemeAsync(userName, theme);
        }
        
        public AltBet.Exchange.ResultObj ChangePassword(string userName, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(userName, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<AltBet.Exchange.ResultObj> ChangePasswordAsync(string userName, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(userName, oldPassword, newPassword);
        }
        
        public AltBet.ExchangeServices.Services.Authorization LoginAdmin(string userName, string password) {
            return base.Channel.LoginAdmin(userName, password);
        }
        
        public System.Threading.Tasks.Task<AltBet.ExchangeServices.Services.Authorization> LoginAdminAsync(string userName, string password) {
            return base.Channel.LoginAdminAsync(userName, password);
        }
        
        public void LogoutAdmin(string user) {
            base.Channel.LogoutAdmin(user);
        }
        
        public System.Threading.Tasks.Task LogoutAdminAsync(string user) {
            return base.Channel.LogoutAdminAsync(user);
        }
        
        public string GetLocation(string ip) {
            return base.Channel.GetLocation(ip);
        }
        
        public System.Threading.Tasks.Task<string> GetLocationAsync(string ip) {
            return base.Channel.GetLocationAsync(ip);
        }
        
        public void UnsubscribeMail(string name, string type, string id) {
            base.Channel.UnsubscribeMail(name, type, id);
        }
        
        public System.Threading.Tasks.Task UnsubscribeMailAsync(string name, string type, string id) {
            return base.Channel.UnsubscribeMailAsync(name, type, id);
        }
    }
}
